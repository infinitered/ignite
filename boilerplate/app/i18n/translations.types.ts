// This file was generated by TranslateSheet.
// Do NOT edit this file directly.
// Run translate-sheet generate-types to regenerate this file.

export type Translations = {
  welcomeScreen: {
    postscript: string;
    readyForLaunch: string;
    exciting: string;
    letsGo: string;
  };
  loginScreen: {
    logIn: string;
    enterDetails: string;
    emailFieldLabel: string;
    passwordFieldLabel: string;
    emailFieldPlaceholder: string;
    passwordFieldPlaceholder: string;
    tapToLogIn: string;
    hint: string;
  };
  demoPodcastListScreen: {
    title: string;
    onlyFavorites: string;
    favoriteButton: string;
    unfavoriteButton: string;
    accessibility: {
      cardHint: string;
      switch: string;
      favoriteAction: string;
      favoriteIcon: string;
      unfavoriteIcon: string;
    };
    noFavoritesEmptyState: {
      heading: string;
      content: string;
    };
  };
  demoDebugScreen: {
    howTo: string;
    title: string;
    tagLine: string;
    reactotron: string;
    reportBugs: string;
    demoList: string;
    demoPodcastList: string;
    androidReactotronHint: string;
    reactotronHint: string;
  };
  demoCommunityScreen: {
    title: string;
    tagLine: string;
    joinUsOnSlackTitle: string;
    joinUsOnSlack: string;
    joinSlackLink: string;
    makeIgniteEvenBetterTitle: string;
    makeIgniteEvenBetter: string;
    contributeToIgniteLink: string;
    theLatestInReactNativeTitle: string;
    theLatestInReactNative: string;
    reactNativeRadioLink: string;
    reactNativeNewsletterLink: string;
    reactNativeLiveLink: string;
    chainReactConferenceLink: string;
    hireUsTitle: string;
    hireUs: string;
    hireUsLink: string;
  };
  errorScreen: {
    title: string;
    friendlySubtitle: string;
    reset: string;
  };
  demoShowroomScreen: {
    jumpStart: string;
    lorem2Sentences: string;
    demoHeaderTxExample: string;
    demoViaTxProp: string;
    demoViaSpecifiedTxProp: string;
  };
  demoToggle: {
    description: string;
    useCase: {
      variants: {
        name: string;
        description: string;
        checkbox: {
          label: string;
          helper: string;
        };
        radio: {
          label: string;
          helper: string;
        };
        switch: {
          label: string;
          helper: string;
        };
      };
      statuses: {
        name: string;
        description: string;
        noStatus: string;
        errorStatus: string;
        disabledStatus: string;
      };
      passingContent: {
        name: string;
        description: string;
        useCase: {
          checkBox: {
            label: string;
            helper: string;
          };
          checkBoxMultiLine: {
            helper: string;
          };
          radioChangeSides: {
            helper: string;
          };
          customCheckBox: {
            label: string;
          };
          switch: {
            label: string;
            helper: string;
          };
          switchAid: {
            label: string;
          };
        };
      };
      styling: {
        name: string;
        description: string;
        outerWrapper: string;
        innerWrapper: string;
        inputDetail: string;
        labelTx: string;
        styleContainer: string;
      };
    };
  };
  demoTextField: {
    description: string;
    useCase: {
      statuses: {
        name: string;
        description: string;
        noStatus: {
          label: string;
          helper: string;
          placeholder: string;
        };
        error: {
          label: string;
          helper: string;
          placeholder: string;
        };
        disabled: {
          label: string;
          helper: string;
          placeholder: string;
        };
      };
      passingContent: {
        name: string;
        description: string;
        viaLabel: {
          labelTx: string;
          helper: string;
          placeholder: string;
        };
        rightAccessory: {
          label: string;
          helper: string;
        };
        leftAccessory: {
          label: string;
          helper: string;
        };
        supportsMultiline: {
          label: string;
          helper: string;
        };
      };
      styling: {
        name: string;
        description: string;
        styleInput: {
          label: string;
          helper: string;
        };
        styleInputWrapper: {
          label: string;
          helper: string;
        };
        styleContainer: {
          label: string;
          helper: string;
        };
        styleLabel: {
          label: string;
          helper: string;
        };
        styleAccessories: {
          label: string;
          helper: string;
        };
      };
    };
  };
  demoText: {
    description: string;
    useCase: {
      presets: {
        name: string;
        description: string;
        default: string;
        bold: string;
        subheading: string;
        heading: string;
      };
      sizes: {
        name: string;
        description: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xxl: string;
      };
      weights: {
        name: string;
        description: string;
        light: string;
        normal: string;
        medium: string;
        semibold: string;
        bold: string;
      };
      passingContent: {
        name: string;
        description: string;
        viaText: string;
        viaTx: string;
        children: string;
        nestedChildren: string;
        nestedChildren2: string;
        nestedChildren3: string;
        nestedChildren4: string;
      };
      styling: {
        name: string;
        description: string;
        text: string;
        text2: string;
        text3: string;
      };
    };
  };
  demoListItem: {
    description: string;
    useCase: {
      height: {
        name: string;
        description: string;
        defaultHeight: string;
        customHeight: string;
        textHeight: string;
        longText: string;
      };
      separators: {
        name: string;
        description: string;
        topSeparator: string;
        topAndBottomSeparator: string;
        bottomSeparator: string;
      };
      icons: {
        name: string;
        description: string;
        leftIcon: string;
        rightIcon: string;
        leftRightIcons: string;
      };
      customLeftRight: {
        name: string;
        description: string;
        customLeft: string;
        customRight: string;
      };
      passingContent: {
        name: string;
        description: string;
        text: string;
        children: string;
        nestedChildren1: string;
        nestedChildren2: string;
      };
      listIntegration: {
        name: string;
        description: string;
      };
      styling: {
        name: string;
        description: string;
        styledText: string;
        styledContainer: string;
        tintedIcons: string;
      };
    };
  };
  demoIcon: {
    description: string;
    useCase: {
      icons: {
        name: string;
        description: string;
      };
      size: {
        name: string;
        description: string;
      };
      color: {
        name: string;
        description: string;
      };
      styling: {
        name: string;
        description: string;
      };
    };
  };
  demoHeader: {
    description: string;
    useCase: {
      actionIcons: {
        name: string;
        description: string;
        leftIconTitle: string;
        rightIconTitle: string;
        bothIconsTitle: string;
      };
      actionText: {
        name: string;
        description: string;
        leftTxTitle: string;
        rightTextTitle: string;
      };
      customActionComponents: {
        name: string;
        description: string;
        customLeftActionTitle: string;
      };
      titleModes: {
        name: string;
        description: string;
        centeredTitle: string;
        flexTitle: string;
      };
      styling: {
        name: string;
        description: string;
        styledTitle: string;
        styledWrapperTitle: string;
        tintedIconsTitle: string;
      };
    };
  };
  demoEmptyState: {
    description: string;
    useCase: {
      presets: {
        name: string;
        description: string;
      };
      passingContent: {
        name: string;
        description: string;
        customizeImageHeading: string;
        customizeImageContent: string;
        viaHeadingProp: string;
        viaContentProp: string;
        viaButtonProp: string;
      };
      styling: {
        name: string;
        description: string;
      };
    };
  };
  demoCard: {
    description: string;
    useCase: {
      presets: {
        name: string;
        description: string;
        default: {
          heading: string;
          content: string;
          footer: string;
        };
        reversed: {
          heading: string;
          content: string;
          footer: string;
        };
      };
      verticalAlignment: {
        name: string;
        description: string;
        top: {
          heading: string;
          content: string;
          footer: string;
        };
        center: {
          heading: string;
          content: string;
          footer: string;
        };
        spaceBetween: {
          heading: string;
          content: string;
          footer: string;
        };
        reversed: {
          heading: string;
          content: string;
          footer: string;
        };
      };
      passingContent: {
        name: string;
        description: string;
        heading: string;
        content: string;
        footer: string;
      };
      customComponent: {
        name: string;
        description: string;
        rightComponent: string;
        leftComponent: string;
      };
      style: {
        name: string;
        description: string;
        heading: string;
        content: string;
        footer: string;
      };
    };
  };
  demoButton: {
    description: string;
    useCase: {
      presets: {
        name: string;
        description: string;
      };
      passingContent: {
        name: string;
        description: string;
        viaTextProps: string;
        children: string;
        rightAccessory: string;
        leftAccessory: string;
        nestedChildren: string;
        nestedChildren2: string;
        nestedChildren3: string;
        multiLine: string;
      };
      styling: {
        name: string;
        description: string;
        styleContainer: string;
        styleText: string;
        styleAccessories: string;
        pressedState: string;
      };
      disabling: {
        name: string;
        description: string;
        standard: string;
        filled: string;
        reversed: string;
        accessory: string;
        textStyle: string;
      };
    };
  };
  demoAutoImage: {
    description: string;
    useCase: {
      remoteUri: {
        name: string;
      };
      base64Uri: {
        name: string;
      };
      scaledToFitDimensions: {
        name: string;
        description: string;
        heightAuto: string;
        widthAuto: string;
        bothManual: string;
      };
    };
  };
  demoNavigator: {
    componentsTab: string;
    debugTab: string;
    communityTab: string;
    podcastListTab: string;
  };
  episodeModel: {
    accessibility: {
      publishLabel: string;
      durationLabel: string;
    };
  };
  common: {
    ok: string;
    cancel: string;
    back: string;
    logOut: string;
  };
  emptyStateComponent: {
    generic: {
      heading: string;
      content: string;
      button: string;
    };
  };
};
