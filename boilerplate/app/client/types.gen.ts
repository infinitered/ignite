// This file is auto-generated by @hey-api/openapi-ts

export type Item = {
  /**
   * Unique identifier of the item which can be used in the URL
   */
  id: string;
  /**
   * Unique identifier of the user who created the item
   */
  userId: string;
  /**
   * First name of the item
   */
  description: string;
  /**
   * Last name of the item
   */
  title: string;
  /**
   * UNIX timestamp in seconds when the item was created
   */
  createdAt: string;
  /**
   * UNIX timestamp in seconds when the item was last updated
   */
  updatedAt: string;
};

export type ItemResponse = {
  /**
   * Previous page token string
   */
  prev?: number;
  /**
   * Next page token string
   */
  next?: number;
  /**
   * Array of items
   */
  items: Array<Item>;
};

export type ItemCreationSchema = {
  /**
   * First name of the item
   */
  description: string;
  /**
   * Last name of the item
   */
  title: string;
  /**
   * Unique identifier of the user who created the item
   */
  userId: string;
};

export type HeartbeatResponse = {
  /**
   * Service state
   */
  state: string;
};

export type ItemsControllerFindAllData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Limit for pagination
     */
    limit?: number;
    /**
     * Next page token string - oldest tweet of the page
     */
    nextPageToken?: string;
    /**
     * Previous page token string - latest tweet of the page
     */
    prevPageToken?: string;
    /**
     * Limit for pagination
     */
    userId: string;
  };
  url: '/api/items';
};

export type ItemsControllerFindAllResponses = {
  /**
   * The records have been successfully found.
   */
  200: ItemResponse;
};

export type ItemsControllerFindAllResponse =
  ItemsControllerFindAllResponses[keyof ItemsControllerFindAllResponses];

export type ItemsControllerCreateData = {
  body: ItemCreationSchema;
  path?: never;
  query?: never;
  url: '/api/items';
};

export type ItemsControllerCreateResponses = {
  /**
   * The record has been successfully created.
   */
  201: Item;
};

export type ItemsControllerCreateResponse =
  ItemsControllerCreateResponses[keyof ItemsControllerCreateResponses];

export type ItemsControllerDeleteData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/items/{id}';
};

export type ItemsControllerDeleteResponses = {
  /**
   * The record has been successfully deleted.
   */
  200: Item;
};

export type ItemsControllerDeleteResponse =
  ItemsControllerDeleteResponses[keyof ItemsControllerDeleteResponses];

export type HeartbeatControllerHeartbeatData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/heartbeat';
};

export type HeartbeatControllerHeartbeatResponses = {
  /**
   * The service is up and running
   */
  200: HeartbeatResponse;
};

export type HeartbeatControllerHeartbeatResponse =
  HeartbeatControllerHeartbeatResponses[keyof HeartbeatControllerHeartbeatResponses];

export type ClientOptions = {
  baseUrl: string;
};
