// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`markup remove should remove all comments in AppNavigator 1`] = `
"
/**
 * The app navigator (formerly \\"AppNavigator\\" and \\"MainNavigator\\") is used for the primary
 * navigation flows of your app.
 * Generally speaking, it will contain an auth flow (registration, login, forgot password)
 * and a \\"main\\" flow which the user will use once logged in.
 */
import {
  NavigationContainer,
} from \\"@react-navigation/native\\"
import { createNativeStackNavigator, NativeStackScreenProps } from \\"@react-navigation/native-stack\\"
import { observer } from \\"mobx-react-lite\\"
import * as Screens from \\"app/screens\\"
import Config from \\"../config\\"
import { navigationRef, useBackButtonHandler } from \\"./navigationUtilities\\"
import { useAppTheme, useThemeProvider } from \\"app/utils/useAppTheme\\"

/**
 * This type allows TypeScript to know what routes are defined in this navigator
 * as well as what properties (if any) they might take when navigating to them.
 *
 * If no params are allowed, pass through undefined. Generally speaking, we
 * recommend using your MobX-State-Tree store(s) to keep application state
 * rather than passing state through navigation params.
 *
 * For more information, see this documentation:
 *   https://reactnavigation.org/docs/params/
 *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
 *   https://reactnavigation.org/docs/typescript/#organizing-types
 */
export type AppStackParamList = {
  Welcome: undefined
  // ðŸ”¥ Your screens go here
  // IGNITE_GENERATOR_ANCHOR_APP_STACK_PARAM_LIST
}

/**
 * This is a list of all the route names that will exit the app if the back button
 * is pressed while in that screen. Only affects Android.
 */
const exitRoutes = Config.exitRoutes

export type AppStackScreenProps<T extends keyof AppStackParamList> = NativeStackScreenProps<
  AppStackParamList,
  T
>

// Documentation: https://reactnavigation.org/docs/stack-navigator/
const Stack = createNativeStackNavigator<AppStackParamList>()

const AppStack = observer(function AppStack() {
  return (
    <Stack.Navigator
      screenOptions={{
        headerShown: false,
        navigationBarColor: colors.background,
        contentStyle: {
          backgroundColor: colors.background,
        },
      }}
    >
          <Stack.Screen name=\\"Welcome\\" component={Screens.WelcomeScreen} />
      {/** ðŸ”¥ Your screens go here */}
      {/* IGNITE_GENERATOR_ANCHOR_APP_STACK_SCREENS */}
    </Stack.Navigator>
  )
})

export interface NavigationProps
  extends Partial<React.ComponentProps<typeof NavigationContainer>> {}

export const AppNavigator = observer(function AppNavigator(props: NavigationProps) {
  const { theme, navigationTheme, setThemeContextOverride, ThemeProvider } = useThemeProvider()

  useBackButtonHandler((routeName) => exitRoutes.includes(routeName))

  return (
    <ThemeProvider value={{ theme, setThemeContextOverride }}>
      <NavigationContainer ref={navigationRef} theme={navigationTheme} {...props}>
        <AppStack />
      </NavigationContainer>
    </ThemeProvider>
  )
})
"
`;

exports[`markup remove should remove all comments in WelcomeScreen 1`] = `
"
import { observer } from \\"mobx-react-lite\\"
import { FC } from \\"react\\"
import { Image, ImageStyle, TextStyle, View, ViewStyle } from \\"react-native\\"
import {
  Text,
} from \\"app/components\\"
import { isRTL } from \\"@/i18n\\"
import { AppStackScreenProps } from \\"../navigators\\"
import type { ThemedStyle } from \\"app/theme\\"
import { useSafeAreaInsetsStyle } from \\"../utils/useSafeAreaInsetsStyle\\"

const welcomeLogo = require(\\"../../assets/images/logo.png\\")
const welcomeFace = require(\\"../../assets/images/welcome-face.png\\")

interface WelcomeScreenProps extends AppStackScreenProps<\\"Welcome\\"> {}

export const WelcomeScreen: FC<WelcomeScreenProps> = observer(function WelcomeScreen(
) {

  const $bottomContainerInsets = useSafeAreaInsetsStyle([\\"bottom\\"])

  return (
    <View style={themed($container)}>
      <View style={themed($topContainer)}>
        <Image style={themed($welcomeLogo)} source={welcomeLogo} resizeMode=\\"contain\\" />
        <Text
          testID=\\"welcome-heading\\"
          style={themed($welcomeHeading)}
          tx=\\"welcomeScreen:readyForLaunch\\"
          preset=\\"heading\\"
        />
        <Text tx=\\"welcomeScreen:exciting\\" preset=\\"subheading\\" />
        <Image style={$welcomeFace} source={welcomeFace} resizeMode=\\"contain\\" />
      </View>

      <View style={[themed($bottomContainer), $bottomContainerInsets]}>
        <Text tx=\\"welcomeScreen:postscript\\" size=\\"md\\" />
      </View>
    </View>
  )
})

const $container: ThemedStyle<ViewStyle> = ({ colors }) => ({
  flex: 1,
  backgroundColor: colors.background,
})

const $topContainer: ThemedStyle<ViewStyle> = ({ spacing }) => ({
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: \\"57%\\",
  justifyContent: \\"center\\",
  paddingHorizontal: spacing.lg,
})

const $bottomContainer: ThemedStyle<ViewStyle> = ({ colors, spacing }) => ({
  flexShrink: 1,
  flexGrow: 0,
  flexBasis: \\"43%\\",
  backgroundColor: colors.palette.neutral100,
  borderTopLeftRadius: 16,
  borderTopRightRadius: 16,
  paddingHorizontal: spacing.lg,
  justifyContent: \\"space-around\\",
})

const $welcomeLogo: ThemedStyle<ImageStyle> = ({ spacing }) => ({
  height: 88,
  width: \\"100%\\",
  marginBottom: spacing.xxl,
})

const $welcomeFace: ImageStyle = {
  height: 169,
  width: 269,
  position: \\"absolute\\",
  bottom: -47,
  right: -80,
  transform: [{ scaleX: isRTL ? -1 : 1 }],
}

const $welcomeHeading: ThemedStyle<TextStyle> = ({ spacing }) => ({
  marginBottom: spacing.md,
})
"
`;

exports[`markup removeBlock should remove comments and lines between "# @test remove-block-start" and "# @test remove-block-end" 1`] = `
"

        ---
        - runFlow: Login.yaml
        - tapOn: \\"Podcast, tab, 3 of 4\\"
        - assertVisible: \\"React Native Radio episodes\\"
        "
`;

exports[`markup removeBlock should remove comments and lines between "/* @test remove-block-start */" and "/* @test remove-block-end */" 1`] = `
"
          export * from \\"./WelcomeScreen\\"
          export * from \\"./LoginScreen\\"
          export * from \\"./ErrorScreen/ErrorBoundary\\"
          // export other screens here
        "
`;

exports[`markup removeBlock should remove comments and lines between "// @test remove-block-start" and "// @test remove-block-end" 1`] = `
"
          export * from \\"./WelcomeScreen\\"
          export * from \\"./LoginScreen\\"
          export * from \\"./ErrorScreen/ErrorBoundary\\"
          // export other screens here
        "
`;

exports[`markup removeCurrentLine should remove line with "# @test remove-current-line" comment 1`] = `
"
      # flow: run the login flow and then navigate to the demo podcast list screen, favorite a podcast, and then switch the list to only be favorites.
      env:
        TITLE: \\"RNR 257 - META RESPONDS! How can we improve React Native, part 2\\"
        FAVORITES_TEXT: \\"Switch on to only show favorites\\"

      ---
      - runFlow: Login.yaml
      - tapOn: \\"Podcast, tab, 3 of 4\\"
      - assertVisible: \\"React Native Radio episodes\\"
      "
`;

exports[`markup removeCurrentLine should remove line with "/* @test remove-current-line */" comment 1`] = `
"
        import { StyleProp, View, ViewStyle } from \\"react-native\\"

        interface DemoDividerProps {
            type?: \\"vertical\\" | \\"horizontal\\"
            size?: number
            style?: StyleProp<ViewStyle>
        }

        export function DemoDivider(props: DemoDividerProps) {
            const { type = \\"horizontal\\", size = 10, style: $styleOverride } = props

            return (
              <View
                  style={[
                    $divider,
                    type === \\"horizontal\\" && { height: size },
                    type === \\"vertical\\" && { width: size },
                  ]}
              />
            )
        }

        const $divider: ViewStyle = {
            flexGrow: 0,
        }
      "
`;

exports[`markup removeCurrentLine should remove line with "// @test remove-current-line" comment 1`] = `
"
        import { StyleProp, View, ViewStyle } from \\"react-native\\"

        interface DemoDividerProps {
            type?: \\"vertical\\" | \\"horizontal\\"
            size?: number
            style?: StyleProp<ViewStyle>
        }

        export function DemoDivider(props: DemoDividerProps) {
            const { type = \\"horizontal\\", size = 10, style: $styleOverride } = props

            return (
              <View
                  style={[
                    $divider,
                    type === \\"horizontal\\" && { height: size },
                    type === \\"vertical\\" && { width: size },
                    $styleOverride,
                  ]}
              />
            )
        }

        const $divider: ViewStyle = {
            flexGrow: 0,
        }
      "
`;

exports[`markup removeNextLine should not modify other lines other than "// @test remove-next-line and line after" 1`] = `
"export * from \\"./DemoIcon\\"
export * from \\"./DemoTextField\\"
export * from \\"./DemoButton\\"
export * from \\"./DemoListItem\\"
export * from \\"./DemoHeader\\"
export * from \\"./DemoText\\""
`;

exports[`markup removeNextLine should remove comment and next line after "# @test remove-next-line" 1`] = `
"
        # flow: run the login flow and then navigate to the demo podcast list screen, favorite a podcast, and then switch the list to only be favorites.
        env:
          TITLE: \\"RNR 257 - META RESPONDS! How can we improve React Native, part 2\\"
          FAVORITES_TEXT: \\"Switch on to only show favorites\\"

        ---
        - runFlow: Login.yaml
        - tapOn: \\"Podcast, tab, 3 of 4\\"
        - assertVisible: \\"React Native Radio episodes\\"
        "
`;

exports[`markup removeNextLine should remove comment and next line after "/* @test remove-next-line */" 1`] = `
"
          export * from \\"./WelcomeScreen\\"
          export * from \\"./LoginScreen\\"
        "
`;

exports[`markup removeNextLine should remove comment and next line after "// @test remove-next-line" 1`] = `
"
          export * from \\"./WelcomeScreen\\"
          export * from \\"./LoginScreen\\"
        "
`;
